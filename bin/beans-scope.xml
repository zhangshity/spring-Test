<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="car" class="com.demo.spring.beans.autowire.Car"
		scope="prototype">
		<property name="brand" value="AUdi"></property>
		<property name="price" value="300000"></property>
	</bean>
	<!--   
		/*==============================================================================
		 * scope="prototype"  原型的，结果：This Car's constructor!
		 *								   This Car's constructor!
		 *								   false，
		 *					    每次从容器获取bean，都会产生新的bean
		 *					  //在IOC容器创建时，还没有创建bean实例(利用构造函数验证)
		 *					  //每次从容器中getBean时才创建bean实例，每次拿取时创建的bean不同
		 *——————————————————————————————————————————————————————————————————————————————
		 * scope="request" 
		 *——————————————————————————————————————————————————————————————————————————————
		 * scope="session" 
		 *——————————————————————————————————————————————————————————————————————————————
		 * scope="singleton" 单例模式(默认模式)，结果：This Car's constructor!
		 *											true
		 *					   容器创建bean实例，在整个容器的生命周期中 ，只有一个bean。
		 *                   //其实在IOC容器创建好的过程中bean就创建好了(利用构造函数验证)
		 * ==============================================================================
		 * */
	-->

</beans>
